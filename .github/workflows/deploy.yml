name: Deploy Backend
on:
  workflow_dispatch:
    inputs:
      ref:
        description: Git ref to deploy
        default: main
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BACKEND_DIR: ~/backend           # adjust if different
    steps:
      - name: Prep SSH known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -p "${{ secrets.DROPLET_SSH_PORT || 22 }}" "${{ secrets.DROPLET_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: ${{ secrets.DROPLET_SSH_PORT || 22 }}
          script: |
            set -e
            echo "=== Current directory and git status ==="
            cd ~/backend
            pwd
            git status
            git log --oneline -5
            
            echo "=== Stopping PM2 processes ==="
            pm2 stop server || true
            pm2 delete server || true
            
            echo "=== Fetching latest from origin ==="
            git fetch origin
            
            echo "=== Force checkout and reset to specified ref ==="
            git checkout ${{ github.event.inputs.ref || 'main' }}
            git reset --hard origin/${{ github.event.inputs.ref || 'main' }}
            
            echo "=== Clearing all caches and build artifacts ==="
            rm -rf node_modules
            rm -rf dist
            rm -rf build
            npm cache clean --force
            
            echo "=== Fresh install of dependencies ==="
            npm ci
            
            echo "=== Starting PM2 server ==="
            pm2 start ecosystem.config.js --only server || pm2 start npm --name server -- run start
            pm2 save
            
            echo "=== PM2 status ==="
            pm2 status
            pm2 logs server --lines 10 --nostream
            
            echo "=== Deployment completed ==="
            git log --oneline -1
            echo "Deployed commit: $(git rev-parse HEAD)"
